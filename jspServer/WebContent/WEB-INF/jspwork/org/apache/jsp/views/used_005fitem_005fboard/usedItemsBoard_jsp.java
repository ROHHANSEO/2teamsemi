/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.58
 * Generated at: 2022-03-20 02:59:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.used_005fitem_005fboard;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import com.uni.usedItemBoard.model.vo.*;

public final class usedItemsBoard_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/views/used_item_board/../common/header.jsp", Long.valueOf(1647714707272L));
    _jspx_dependants.put("/views/used_item_board/../common/filter.jsp", Long.valueOf(1647630270540L));
    _jspx_dependants.put("/views/used_item_board/../common/footer.jsp", Long.valueOf(1647626843682L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("com.uni.usedItemBoard.model.vo");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

	ArrayList<UsedItemsBoard> list = (ArrayList<UsedItemsBoard>)request.getAttribute("list");
	PageInfo pi = (PageInfo)request.getAttribute("pi");
	
	int listCount = pi.getListCount();
	int currentPage = pi.getCurrentPage();
	int maxPage = pi.getMaxPage();
	int startPage = pi.getStartPage();
	int endPage = pi.getEndPage();

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<style>\r\n");
      out.write("	#top{\r\n");
      out.write("		display: flex;\r\n");
      out.write("		border: 1px solid black;\r\n");
      out.write("		justify-content: center;\r\n");
      out.write("	}\r\n");
      out.write("	.container{\r\n");
      out.write("		display: flex;\r\n");
      out.write("		justify-content: center;\r\n");
      out.write("	}\r\n");
      out.write("	.item{\r\n");
      out.write("		border: 1px solid black;\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("<body>\r\n");
      out.write("	<div>\r\n");
      out.write("    	");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"../../resources/css/common/common.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <header id=\"main_header\">\r\n");
      out.write("        <div id=\"header\">\r\n");
      out.write("            <div id=\"logo\"><a href=\"/\"><img src=\"../../resources/images/logo.gif\" alt=\"메인로고이미지\"></a></div>\r\n");
      out.write("            <div id=\"search\">\r\n");
      out.write("                \r\n");
      out.write("            </div>\r\n");
      out.write("            <div id=\"header_top_right\">\r\n");
      out.write("                <a href=\"");
      out.print(request.getContextPath());
      out.write("/loginPage\" class=\"login_page\">로그인</a>\r\n");
      out.write("                /\r\n");
      out.write("                <a href=\"");
      out.print(request.getContextPath());
      out.write("/sign_up\" class=\"insert_user\">회원가입</a>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <nav id=\"main_nav\">\r\n");
      out.write("            <div class=\"nav\">\r\n");
      out.write("                <div class=\"category\">\r\n");
      out.write("                    <div class=\"category_box\">\r\n");
      out.write("                        <i class=\"berger1\"></i>\r\n");
      out.write("                        <i class=\"berger2\"></i>\r\n");
      out.write("                        <i class=\"berger3\"></i>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <ul>\r\n");
      out.write("                    <li><div onmouseover=\"add()\" onmouseleave=\"remove()\"><a href=\"<!--이동할 jsp가 위치한 경로입력 할 것-->\">시세</a></div></li>\r\n");
      out.write("                    <li><div onmouseover=\"add()\" onmouseleave=\"remove()\"><a href=\"<!--이동할 jsp가 위치한 경로입력 할 것-->\">경매</a></div></li>\r\n");
      out.write("                    <li><div onmouseover=\"add()\" onmouseleave=\"remove()\"><a href=\"<!--이동할 jsp가 위치한 경로입력 할 것-->\">커뮤니티</a></div></li>\r\n");
      out.write("                    <li><div onmouseover=\"add()\" onmouseleave=\"remove()\"><a href=\"");
      out.print(request.getContextPath());
      out.write("/usedBoardList.do\">중고거래</a></div></li>\r\n");
      out.write("                    <li><div onmouseover=\"add()\" onmouseleave=\"remove()\"><a href=\"<!--이동할 jsp가 위치한 경로입력 할 것-->\">이벤트</a></div></li>\r\n");
      out.write("                    <li><div onmouseover=\"add()\" onmouseleave=\"remove()\"><a href=\"");
      out.print(request.getContextPath());
      out.write("/serviceCenter.do\">고객센터</a></div></li>\r\n");
      out.write("                </ul>\r\n");
      out.write("            </div>\r\n");
      out.write("        </nav>\r\n");
      out.write("    </header>\r\n");
      out.write("    <script src=\"../../resources/library/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("    <script src=\"../../resources/js/common/common.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("    <br>\r\n");
      out.write("    <div id=\"top\">\r\n");
      out.write("    	");
      out.write('\r');
      out.write('\n');

	boolean bol = false;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("	<link rel=\"stylesheet\" href=\"../../resources/css/filter/filter.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div id=\"filter\">\r\n");
      out.write("		<div id=\"filterdiv\">\r\n");
      out.write("			<select id=\"large\">\r\n");
      out.write("				<option value=\"대분류\">대분류</option>\r\n");
      out.write("			</select>\r\n");
      out.write("			<select id=\"middle\">\r\n");
      out.write("				<option value=\"중분류\">중분류</option>\r\n");
      out.write("			</select>\r\n");
      out.write("			<select id=\"small\">\r\n");
      out.write("				<option value=\"소분류\">소분류</option>\r\n");
      out.write("			</select>\r\n");
      out.write("			<button id=\"filter-Apply\" type=\"button\">필터 적용</button>\r\n");
      out.write("		</div>	\r\n");
      out.write("		");
      out.write("\r\n");
      out.write("		<div id=\"detaildiv\">\r\n");
      out.write("			<br>\r\n");
      out.write("			<div class=\"f-1\">\r\n");
      out.write("				<input class=\"filtering\" id=\"maginright\" type=\"text\" placeholder=\"최소 금액\">  ~  <input id=\"maginleft\" type=\"text\" placeholder=\"최대 금액\">\r\n");
      out.write("			</div>\r\n");
      out.write("			<br>\r\n");
      out.write("			<div class=\"f-1\">\r\n");
      out.write("				<input class=\"filtering\" type=\"text\" placeholder=\"검색 내 검색\"> <div class=\"filtering\"> <input type=\"checkbox\"> 거래완료 게시글 제외하기</div>\r\n");
      out.write("				<button id=\"filter-Apply2\" type=\"button\">필터 적용</button>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div id=\"end\">\r\n");
      out.write("			<div id=\"enddetail\">\r\n");
      out.write("				<button id=\"details\" type=\"button\"><img src=\"https://img.icons8.com/fluency-systems-filled/48/000000/view-file.png\"/></button>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<script>\r\n");
      out.write("			$(\"#details\").click(function() {\r\n");
      out.write("				$(\"#filter-Apply\").toggle()\r\n");
      out.write("				$(\"#detaildiv\").toggle()\r\n");
      out.write("				$(\"#filter-Apply2\").toggle()\r\n");
      out.write("			})\r\n");
      out.write("		</script>\r\n");
      out.write("		<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js\"></script>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("    <br>\r\n");
      out.write("    <div>\r\n");
      out.write("	    <input type=\"button\" value=\"글 작성하기\" onclick=\"location.href='");
      out.print( request.getContextPath() );
      out.write("/insertUsedBoard.do'\">\r\n");
      out.write("	    <a href=\"");
      out.print( request.getContextPath() );
      out.write("/usedListDesc.do\">최신순</a> | <a href=\"");
      out.print( request.getContextPath() );
      out.write("/usedListLike.do\">인기순</a> | <a href=\"");
      out.print( request.getContextPath() );
      out.write("/usedListPriceDesc.do\">고가순</a> | <a href=\"");
      out.print( request.getContextPath() );
      out.write("/usedListPriceAsc.do\">저가순</a>\r\n");
      out.write("	    <hr>\r\n");
      out.write("	    <div class=\"container\">\r\n");
      out.write("	    	<div class=\"item\"></div>\r\n");
      out.write("	    	<div class=\"item\">\r\n");
      out.write("		    	");
if(list.isEmpty()){ 
      out.write("\r\n");
      out.write("					<div>조회된 리스트가 없습니다.</div>\r\n");
      out.write("				");
}else{ 
      out.write("\r\n");
      out.write("					");
 for(UsedItemsBoard b : list){ 
      out.write("\r\n");
      out.write("						<div>");
      out.print( b.getUsedBoardNo() );
      out.write("</div>\r\n");
      out.write("						<div>");
      out.print( b.getCategory() );
      out.write("</div>\r\n");
      out.write("						<div>");
      out.print( b.getUsedBoardContent() );
      out.write("</div>\r\n");
      out.write("						<div>");
      out.print( b.getUsedBoardWriter() );
      out.write("</div>\r\n");
      out.write("						<div>");
      out.print( b.getLikeCount() );
      out.write("</div>\r\n");
      out.write("						<div>");
      out.print( b.getCreateDate() );
      out.write("</div>\r\n");
      out.write("					");
} 
      out.write("\r\n");
      out.write("				");
} 
      out.write("\r\n");
      out.write("		    </div>\r\n");
      out.write("	    	<div class=\"item\"></div>\r\n");
      out.write("	    </div>\r\n");
      out.write("    </div>\r\n");
      out.write("	<!-- 페이징바 -->\r\n");
      out.write("	<div class=\"pagingArea\" align=\"center\">\r\n");
      out.write("		<!-- 맨 처음으로 (<<) -->\r\n");
      out.write("		<button onclick=\"location.href='");
      out.print( request.getContextPath() );
      out.write("/listBoard.do?currentPage=1'\"> &lt;&lt; </button>\r\n");
      out.write("	\r\n");
      out.write("		<!-- 이전페이지로(<) -->\r\n");
      out.write("		");
if(currentPage == 1){ 
      out.write("\r\n");
      out.write("		<button disabled> &lt; </button>\r\n");
      out.write("		");
}else{ 
      out.write("\r\n");
      out.write("		<button onclick=\"location.href='");
      out.print( request.getContextPath() );
      out.write("/listBoard.do?currentPage=");
      out.print( currentPage-1 );
      out.write("'\"> &lt; </button>\r\n");
      out.write("		");
} 
      out.write("\r\n");
      out.write("		\r\n");
      out.write("		<!-- 페이지 목록 -->\r\n");
      out.write("		");
for(int p=startPage; p<=endPage; p++){ 
      out.write("\r\n");
      out.write("			");
if(p == currentPage){ 
      out.write("\r\n");
      out.write("			<button disabled> ");
      out.print( p );
      out.write(" </button>\r\n");
      out.write("			");
}else{ 
      out.write("\r\n");
      out.write("			<button onclick=\"location.href='");
      out.print( request.getContextPath() );
      out.write("/listBoard.do?currentPage=");
      out.print( p );
      out.write("'\"> ");
      out.print( p );
      out.write(" </button>\r\n");
      out.write("			");
} 
      out.write("\r\n");
      out.write("			\r\n");
      out.write("		");
} 
      out.write("\r\n");
      out.write("		\r\n");
      out.write("		<!-- 다음페이지로(>) -->\r\n");
      out.write("		");
if(currentPage == maxPage){ 
      out.write("\r\n");
      out.write("		<button disabled> &gt; </button>\r\n");
      out.write("		");
}else { 
      out.write("\r\n");
      out.write("		<button onclick=\"location.href='");
      out.print( request.getContextPath() );
      out.write("/listBoard.do?currentPage=");
      out.print( currentPage+1 );
      out.write("'\"> &gt; </button>\r\n");
      out.write("		");
} 
      out.write("\r\n");
      out.write("	\r\n");
      out.write("		<!-- 맨 끝으로 (>>) -->\r\n");
      out.write("		<button onclick=\"location.href='");
      out.print( request.getContextPath() );
      out.write("/listBoard.do?currentPage=");
      out.print(maxPage);
      out.write("'\"> &gt;&gt; </button>\r\n");
      out.write("	</div>\r\n");
      out.write("    <script src=\"../../resources/js/usedItemBoard/usedItem.js\"></script>\r\n");
      out.write("    <div>\r\n");
      out.write("    	");
      out.write("\r\n");
      out.write("    <!DOCTYPE html>\r\n");
      out.write("    <html lang=\"en\">\r\n");
      out.write("    <head>\r\n");
      out.write("        <meta charset=\"UTF-8\">\r\n");
      out.write("        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("        <title>Document</title>\r\n");
      out.write("        <link rel=\"stylesheet\" href=\"../../resources/css/common/common.css\">\r\n");
      out.write("    </head>\r\n");
      out.write("    <body>\r\n");
      out.write("        <footer id=\"footer\">\r\n");
      out.write("            <div id=\"footer_content\">\r\n");
      out.write("                <div>\r\n");
      out.write("                    <span>발표시키지마시조</span>\r\n");
      out.write("                    |\r\n");
      out.write("                    <span>팀장 : 노한서</span>\r\n");
      out.write("                    |\r\n");
      out.write("                    <span>팀원 : 조현</span>\r\n");
      out.write("                    |\r\n");
      out.write("                    <span>팀원 : 김태연</span>\r\n");
      out.write("                    |\r\n");
      out.write("                    <span>팀원 : 최윤종</span>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div>\r\n");
      out.write("                    <span>세미 프로젝트</span>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div>\r\n");
      out.write("                    <span>노한서(팀장) : </span>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div>\r\n");
      out.write("                    <span>조현 : </span>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div>\r\n");
      out.write("                    <span>김태연 : </span>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div>\r\n");
      out.write("                    <span>최윤종 : </span>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div>\r\n");
      out.write("                    <span>Copyright © 2022.02.22-2022.04.03 KH Information Educational Institute All Right Reserved</span>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div id=\"logo\"><a href=\"/\"><img src=\"../../resources/images/logo.gif\" alt=\"로고이미지\"></a></div>\r\n");
      out.write("        </footer>\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("        <script src=\"../../resources/library/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("        <script src=\"../../resources/js/common/common.js\"></script>\r\n");
      out.write("    </body>\r\n");
      out.write("    </html>");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
